//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Entity Developer tool using LinqConnect template.
// Code is generated on: 20/08/2014 15:16:49
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using Devart.Data.Linq;
using Devart.Data.Linq.Mapping;
using System.Data;
using System.ComponentModel;
using System.Collections.Generic;
using System.Reflection;
using System.Linq;
using System.Linq.Expressions;

namespace roster_visual
{

    [DatabaseAttribute(Name = "roster_mysql")]
    [ProviderAttribute(typeof(Devart.Data.MySql.Linq.Provider.MySqlDataProvider))]
    public partial class RosterMysqlDataContext : Devart.Data.Linq.DataContext
    {
        public static CompiledQueryCache compiledQueryCache = CompiledQueryCache.RegisterDataContext(typeof(RosterMysqlDataContext));
        private static MappingSource mappingSource = new Devart.Data.Linq.Mapping.AttributeMappingSource();

        #region Extensibility Method Definitions
    
        partial void OnCreated();
        partial void OnSubmitError(Devart.Data.Linq.SubmitErrorEventArgs args);
        partial void InsertDropInfo(DropInfo instance);
        partial void UpdateDropInfo(DropInfo instance);
        partial void DeleteDropInfo(DropInfo instance);
        partial void InsertEnrollmentOfficer(EnrollmentOfficer instance);
        partial void UpdateEnrollmentOfficer(EnrollmentOfficer instance);
        partial void DeleteEnrollmentOfficer(EnrollmentOfficer instance);
        partial void InsertGraduated(Graduated instance);
        partial void UpdateGraduated(Graduated instance);
        partial void DeleteGraduated(Graduated instance);
        partial void InsertProgram(Program instance);
        partial void UpdateProgram(Program instance);
        partial void DeleteProgram(Program instance);
        partial void InsertSchedule(Schedule instance);
        partial void UpdateSchedule(Schedule instance);
        partial void DeleteSchedule(Schedule instance);
        partial void InsertStudent(Student instance);
        partial void UpdateStudent(Student instance);
        partial void DeleteStudent(Student instance);
        partial void InsertStudentSchedule(StudentSchedule instance);
        partial void UpdateStudentSchedule(StudentSchedule instance);
        partial void DeleteStudentSchedule(StudentSchedule instance);

        #endregion

        public RosterMysqlDataContext() :
        base(GetConnectionString("RosterMysqlDataContextConnectionString"), mappingSource)
        {
            OnCreated();
        }

        public RosterMysqlDataContext(MappingSource mappingSource) :
        base(GetConnectionString("RosterMysqlDataContextConnectionString"), mappingSource)
        {
            OnCreated();
        }

        private static string GetConnectionString(string connectionStringName)
        {
            System.Configuration.ConnectionStringSettings connectionStringSettings = System.Configuration.ConfigurationManager.ConnectionStrings[connectionStringName];
            if (connectionStringSettings == null)
                throw new InvalidOperationException("Connection string \"" + connectionStringName +"\" could not be found in the configuration file.");
            return connectionStringSettings.ConnectionString;
        }

        public RosterMysqlDataContext(string connection) :
            base(connection, mappingSource)
        {
          OnCreated();
        }

        public RosterMysqlDataContext(System.Data.IDbConnection connection) :
            base(connection, mappingSource)
        {
          OnCreated();
        }

        public RosterMysqlDataContext(string connection, MappingSource mappingSource) :
            base(connection, mappingSource)
        {
          OnCreated();
        }

        public RosterMysqlDataContext(System.Data.IDbConnection connection, MappingSource mappingSource) :
            base(connection, mappingSource)
        {
          OnCreated();
        }

        public Devart.Data.Linq.Table<DropInfo> DropInfos
        {
            get
            {
                return this.GetTable<DropInfo>();
            }
        }

        public Devart.Data.Linq.Table<EnrollmentOfficer> EnrollmentOfficers
        {
            get
            {
                return this.GetTable<EnrollmentOfficer>();
            }
        }

        public Devart.Data.Linq.Table<Graduated> Graduateds
        {
            get
            {
                return this.GetTable<Graduated>();
            }
        }

        public Devart.Data.Linq.Table<Program> Programs
        {
            get
            {
                return this.GetTable<Program>();
            }
        }

        public Devart.Data.Linq.Table<Schedule> Schedules
        {
            get
            {
                return this.GetTable<Schedule>();
            }
        }

        public Devart.Data.Linq.Table<Student> Students
        {
            get
            {
                return this.GetTable<Student>();
            }
        }

        public Devart.Data.Linq.Table<StudentSchedule> StudentSchedules
        {
            get
            {
                return this.GetTable<StudentSchedule>();
            }
        }
    }
}
